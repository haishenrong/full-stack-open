{"version":3,"sources":["components/Person.js","services/persons.js","App.js","index.js"],"names":["Person","person","deletePerson","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Persons","persons","text","length","filter","toUpperCase","includes","map","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Filter","newFilter","handleFilterChange","Notification","message","errorMessage","className","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","confirm","setNewConfirm","setErrorMessage","useEffect","personService","initialPersons","event","target","preventDefault","names","numbers","ids","window","personObject","find","changedPerson","updatedPerson","catch","error","setTimeout","Math","min","nextPerson","concat","identifiedPerson","p","resultPersons","filteredPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4efa1b4f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ person, deletePerson }) => {\r\n  return (\r\n    <li>\r\n      {person.name+\" \"+person.number} \r\n      <button onClick={ deletePerson }>delete</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Person","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport personService from './services/persons'\n\nconst Persons = ({persons, text, deletePerson}) => {\n  if(persons.length>=1){\n  let filtered = persons.filter(person => \n      person.name.toUpperCase().includes(text.toUpperCase()));\n    return(\n      filtered.map(person => \n        <Person \n          key = {person.id} \n          person = {person}\n          deletePerson = {() => deletePerson(person.id)}\n        />\n      )\n    )\n  }\n  return(\n    <div>\n      Blank Phonebook\n    </div>\n  )\n}\n\nconst PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\n  return(\n    <form onSubmit = {addPerson}>\n    <div>\n      name: <input value={newName}\n      onChange={handleNameChange} />\n    </div>\n    <div>\n      number: <input value ={newNumber}\n      onChange={handleNumberChange}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nconst Filter = ({newFilter, handleFilterChange}) => {\n  return(\n    <div>\n    filter shown with<input value={newFilter} \n    onChange ={handleFilterChange} />\n  </div>\n  )\n}\n\nconst Notification = ({ message, errorMessage }) => {\n  if (message === null && errorMessage ===null) {\n    return null\n  }\n  else if(errorMessage === null) {\n    return (\n      <div className=\"confirmation\">\n        {message}\n      </div>\n    )\n  }\n  else {\n    return (\n      <div className=\"error\">\n        {errorMessage}\n      </div>\n    )\n  }\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ confirm, setNewConfirm ] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  \n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    let names = persons.map(person => person.name)\n    let numbers = persons.map(person => person.number)\n    let ids = persons.map(person => person.id)\n    let id = 1;\n    while(id<=ids.length && ids.includes(id)){ id++ }\n    if(names.includes(newName))\n    {\n      if( window.confirm(\"The name \\\"\" + newName + \"\\\" already exists in the phonebook, replace the old number with a new one?\")){\n        const personObject = persons.find(person => person.name === newName)\n        const changedPerson = { ...personObject, number:newNumber}\n        personService\n          .update(changedPerson.id,changedPerson)\n          .then(updatedPerson => {\n            setPersons(persons.map(person => person.id !== changedPerson.id ? person : updatedPerson))\n          })\n          .catch(error => {\n            setErrorMessage(error.response.data.error)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n          })\n        setNewConfirm(\n          ` Changed phone number of '${newName}' to '${newNumber}'`\n        )\n        setTimeout(() => {\n          setNewConfirm(null)\n        }, 5000)\n      }\n    }\n    else if(numbers.includes(newNumber))\n    {\n      if( window.confirm(\"The number \\\"\" + newNumber + \"\\\" already exists in the phonebook, replace the old name with a new one?\")){\n        const personObject = persons.find(person => person.number === newNumber)\n        const changedPerson = { ...personObject, name:newName}\n        personService\n          .update(changedPerson.id,changedPerson)\n          .then(updatedPerson => {\n            setPersons(persons.map(person => person.id !== changedPerson.id ? person : updatedPerson))\n          })\n          .catch(error => {\n            setErrorMessage(error.response.data.error)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n          })\n        setNewConfirm(\n          ` Changed name of '${newNumber}' to '${newName}'`\n        )\n        setTimeout(() => {\n          setNewConfirm(null)\n        }, 5000)\n      }\n    }\n    else{\n      const personObject = {\n        id: Math.min(persons.length+1, id),\n        name: newName,\n        number: newNumber\n      }\n      personService\n        .create(personObject)\n        .then(nextPerson => {\n          setPersons(persons.concat(nextPerson))\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          setErrorMessage(error.response.data.error)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n        \n      setNewConfirm(\n        ` Added '${newName}`\n      )\n      setTimeout(() => {\n        setNewConfirm(null)\n      }, 5000)\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n  \n  const deletePerson = (id) => { \n    const identifiedPerson = persons.find(p => p.id === id)\n    personService\n    .deletePerson(id)\n    .then(resultPersons => {\n      const filteredPersons = persons.filter(person => person.id !== id);\n      setPersons(filteredPersons)\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Information of '${identifiedPerson.name}' has already been removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setPersons(persons.filter(p => p.id !== id))\n    })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={confirm} errorMessage={errorMessage} />\n        <Filter\n        newFilter = {newFilter}\n        handleFilterChange={handleFilterChange}\n        />\n      <h2> add a new </h2>\n        <PersonForm \n        addPerson = {addPerson} \n        newName = {newName}\n        handleNameChange = {handleNameChange}\n        newNumber = {newNumber}\n        handleNumberChange = {handleNumberChange}\n        />\n      <h2>Numbers</h2>\n      <ul>\n        <Persons \n        persons={persons} \n        text = {newFilter}\n        deletePerson = {deletePerson}\n        />\n      </ul>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}